/*******************************************************************************
*   Copyright 2012 Analog Devices, Inc.
*
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.
********************************************************************************/

/*
 * See the README file for a high level description of how the Dimple build
 * script works.
 */

apply plugin: 'java'

defaultTasks 'build'

//Specify what repositories to use when looking for jars
repositories {
  mavenCentral()
  maven {
    url "http://mbari-maven-repository.googlecode.com/svn/repository/"
  }
  maven {
    url "http://www.array.ca/nest-web/maven/"
  }

}

//Create a new configuration so that we can refer to all the jar file 
//dependencies later
configurations {
  jarfiles
}

//Create an array of all the dependency jars
project.ext.myjars = [
	"com.google.guava:guava:14.0",
    "org.apache.commons:commons-math3:3.2",
    "commons-collections:commons-collections:3.2.1",
    "edu.emory.mathcs:jtransforms:2.3",
    "jama:jama:1.0.2",
    "colt:colt:1.2.0",
    "junit:junit:4.11",
    "net.jcip:jcip-annotations:1.0",
	files('../non-maven-jars/javailp-1.2a.jar'),
  ]

//Set up all the external dependencies for dimple
dependencies
{
  //for each jar file
  for (j in project.myjars)
  {
    //add the dependency to the compile target
    compile(j)

    //add the dependency to our custom jarfiles target
    jarfiles(j)
  }

  //add a dependency on junit for the testCompile target
  //testCompile 'junit:junit:4.11'
  
}

//This task will copy all of the jar files into the lib directory.
//MATLAB will add these jar files to the path.
task('copyExternalJars', type: Copy) {
  from configurations.jarfiles
  into file('../lib')
}

//Eclipse can only specify relative paths for jar files that are in
//subdirectories of the .classpath file.  As a result, we also have
//to copy all of the jar files into the build/external-libs directory
task copyExternalJarsForEclipse(type: Copy) {
  from configurations.jarfiles
  into file('build/external-libs')
}

//We also provide a task to copy the dimple jar file to ../lib so that
//the build kit and other projects can reference this jar file.
task(copyDimpleJar,type: Copy) {
  from(file('build/libs/dimple.jar'))
  into(file('../lib'))
}

task createVersionFile(type:Exec) {
     workingDir '.'
     commandLine 'python longver.py'.split()
}

processResources.dependsOn createVersionFile

//clean removes the build directory by default.  We also remove ../lib.
clean {
  delete 'src/main/resources/VERSION'
  delete '../lib'
  
}

//define a new task for copying all jars
task copyJars

//In order to copy the dimple jar, we have to produce it
copyDimpleJar.dependsOn jar

//define all of the jar copy tasks
copyJars.dependsOn copyDimpleJar, copyExternalJars, copyExternalJarsForEclipse

//As part of assembly, make sure all jars are in the required locations
assemble.dependsOn copyJars


